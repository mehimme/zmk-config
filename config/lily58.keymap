/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        kpKpBalanced: kpKpBalanced {
            compatible = "zmk,behavior-hold-tap";
            label = "KPKPBALANCED";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        skq: skq {
            compatible = "zmk,behavior-sticky-key";
            label = "SKQ";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <500>;
            quick-release;
            ignore-modifiers;
        };

        lctrlGui: lctrlGui {
            compatible = "zmk,behavior-tap-dance";
            label = "LCTRLGUI";
            #binding-cells = <0>;
            bindings = <&skq LCTRL>, <&kp LGUI>;
        };

        rctrlGui: rctrlGui {
            compatible = "zmk,behavior-tap-dance";
            label = "RCTRLGUI";
            #binding-cells = <0>;
            bindings = <&skq RCTRL>, <&kp LGUI>;
        };

        commaEsc: commaEsc {
            compatible = "zmk,behavior-tap-dance";
            label = "COMMAESC";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp ESCAPE>;
        };

        rsftSqtCaps: rsftSqtCaps {
            compatible = "zmk,behavior-mod-morph";
            label = "RSFTSQTCAPS";
            bindings = <&kpKpBalanced RSHIFT SQT>, <&kp CAPS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        home: home {
            compatible = "zmk,behavior-tap-dance";
            label = "HOME";
            #binding-cells = <0>;
            bindings = <&kp HOME>, <&kp LC(HOME)>;
        };

        end: end {
            compatible = "zmk,behavior-tap-dance";
            label = "END";
            #binding-cells = <0>;
            bindings = <&kp END>, <&kp LC(END)>;
        };

        moTo: moTo {
            compatible = "zmk,behavior-hold-tap";
            label = "MOTO";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        moKpReqIdle: moKpReqIdle {
            compatible = "zmk,behavior-hold-tap";
            label = "MOKPREQIDLE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            require-prior-idle-ms = <125>;
        };

        navOrDefLyr: navOrDefLyr {
            compatible = "zmk,behavior-mod-morph";
            label = "NAVORDEFLYR";
            bindings = <&moTo 3 0>, <&to 3>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        moKp: moKp {
            compatible = "zmk,behavior-hold-tap";
            label = "MOKP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
        };

        // Swapper for smart alt+tab

        altTab: altTab {
            compatible = "zmk,behavior-smart-toggle";
            #binding-cells = <0>;
            bindings = <&kp LALT>, <&kp TAB>;
            ignored-key-positions = <24>;
        };

        // Swapper for smart alt+grave

        altGrave: altGrave {
            compatible = "zmk,behavior-smart-toggle";
            #binding-cells = <0>;
            bindings = <&kp LALT>, <&kp GRAVE>;
            ignored-key-positions = <24>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_lyr {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "colemak_dh";
            bindings = <
&kp ESCAPE   &kp N1  &kp N2  &kp N3     &kp N4        &kp N5                                                &kp N6             &kp N7        &kp N8     &kp N9   &kp N0         &kp ESCAPE
&kp TAB      &kp Q   &kp W   &kp F      &kp P         &kp B                                                 &kp J              &kp L         &kp U      &kp Y    &kp SEMICOLON  &kp BACKSLASH
&skq LSHIFT  &kp A   &kp R   &kp S      &kp T         &kp G                                                 &kp M              &kp N         &kp E      &kp I    &kp O          &rsftSqtCaps
&lctrlGui    &kp Z   &kp X   &kp C      &kp D         &kp V           &home          &end                   &kp K              &kp H         &commaEsc  &kp DOT  &kp FSLH       &rctrlGui
                             &skq LALT  &navOrDefLyr  &moKp 5 DELETE  &lt 4 SPACE    &moKpReqIdle 4 RETURN  &moKp 5 BACKSPACE  &navOrDefLyr  &kp LGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        qwerty_lyr {
            display-name = "qwerty";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans    &trans
&trans  &kp Q   &kp W   &kp E   &kp R   &kp T                     &kp Y   &kp U   &kp I   &kp O   &kp P     &trans
&trans  &kp A   &kp S   &kp D   &kp F   &kp G                     &kp H   &kp J   &kp K   &kp L   &kp SEMI  &trans
&trans  &kp Z   &kp X   &kp C   &kp V   &kp B   &trans    &trans  &kp N   &kp M   &trans  &trans  &trans    &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        inverted_lyr {
            display-name = "colemak_dh_inv";
            bindings = <
&kp ESC   &kp N0    &kp N9   &kp N8     &kp N7  &kp N6                                                          &kp N5              &kp N4  &kp N3    &kp N2  &kp N1  &kp ESC
&kp BSLH  &kp SEMI  &kp Y    &kp U      &kp L   &kp J                                                           &kp B               &kp P   &kp F     &kp W   &kp Q   &kp TAB
&trans    &kp O     &kp I    &kp E      &kp N   &kp M                                                           &kp G               &kp T   &kp S     &kp R   &kp A   &trans
&trans    &kp FSLH  &kp DOT  &commaEsc  &kp H   &kp K                     &end                     &home        &kp V               &kp D   &kp C     &kp X   &kp Z   &trans
                             &kp LGUI   &trans  &moKpReqIdle 6 BACKSPACE  &moKpReqIdle 4 RETURN    &lt 4 SPACE  &moKpReqIdle 6 DEL  &trans  &kp LALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_lyr {
            display-name = "nav";
            bindings = <
&kp C_VOL_UP       &kp C_PP    &trans       &kp INS   &trans         &trans                    &trans  &trans         &kp INS   &trans     &kp C_PP    &kp C_VOL_UP
&kp C_VOLUME_DOWN  &kp C_MUTE  &kp PAGE_UP  &kp UP    &kp PAGE_DOWN  &trans                    &trans  &kp PAGE_DOWN  &kp UP    &kp PG_UP  &kp C_MUTE  &kp C_VOLUME_DOWN
&trans             &trans      &kp LEFT     &kp DOWN  &kp RIGHT      &trans                    &trans  &kp LEFT       &kp DOWN  &kp RIGHT  &trans      &trans
&trans             &to 7       &to 1        &to 4     &to 2          &trans  &trans    &trans  &trans  &to 2          &to 4     &to 1      &to 7       &trans
                                            &trans    &trans         &trans  &trans    &trans  &trans  &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        mouse_lyr {
            display-name = "mouse";
            bindings = <
&trans  &trans          &trans          &trans          &trans           &trans                                   &trans          &trans          &trans          &trans           &trans           &trans
&trans  &msc SCRL_LEFT  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &msc SCRL_RIGHT                          &msc SCRL_LEFT  &msc SCRL_DOWN  &mmv MOVE_UP    &msc SCRL_UP     &msc SCRL_RIGHT  &trans
&trans  &mkp RCLK       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans                                   &trans          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp RCLK        &trans
&trans  &mkp LCLK       &trans          &trans          &mkp MCLK        &trans           &trans       &trans     &trans          &mkp MCLK       &trans          &trans           &mkp LCLK        &trans
                                        &trans          &trans           &trans           &mkp LCLK    &mkp LCLK  &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        sym_lyr {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "sym";
            bindings = <
&kp F1     &kp F2           &kp F3       &kp F4      &kp F5      &kp F6                         &kp F7          &kp F8         &kp F9            &kp F10               &kp F11                &kp F12
&trans     &altGrave        &altTab      &kp TILDE   &trans      &trans                         &kp EQUAL       &kp PLUS       &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp COLON              &kp PIPE
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH    &kp DOLLAR  &kp PERCENT                    &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES
&trans     &mt LALT Z       &mt LALT X   &mt LALT C  &trans      &trans       &trans    &trans  &kp UNDERSCORE  &kp MINUS      &kp LESS_THAN     &kp GREATER_THAN      &kp QUESTION           &trans
                                         &trans      &trans      &trans       &trans    &trans  &trans          &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        isym_lyr {
            display-name = "isym";
            bindings = <
&kp F12            &kp F11                &kp F10               &kp F9         &kp F8         &kp F7                            &kp F6       &kp F5      &kp F4      &kp F3       &kp F2           &kp F1
&kp PIPE           &kp COLON              &kp RBKT              &kp LBKT       &kp PLUS       &kp EQUAL                         &trans       &trans      &kp TILDE   &altTab      &altGrave        &trans
&kp DOUBLE_QUOTES  &kp RIGHT_PARENTHESIS  &kp LEFT_PARENTHESIS  &kp ASTERISK   &kp AMPERSAND  &kp CARET                         &kp PERCENT  &kp DOLLAR  &kp POUND   &kp AT_SIGN  &kp EXCLAMATION  &kp GRAVE
&trans             &kp QUESTION           &kp GREATER_THAN      &kp LESS_THAN  &kp MINUS      &kp UNDERSCORE  &trans    &trans  &trans       &trans      &mt LALT C  &mt LALT X   &mt LALT Z       &trans
                                                                &trans         &trans         &trans          &trans    &trans  &trans       &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        keypad_lyr {
            display-name = "keypad";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &kp KP_NUMLOCK  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans           &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans          &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MULTIPLY  &kp KP_DIVIDE
&trans      &trans        &trans        &trans        &trans        &trans                          &trans          &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS      &kp KP_MINUS
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans          &kp KP_NUMBER_0  &kp KP_DOT       &kp CARET        &kp KP_EQUAL     &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans          &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        extra_1 { status = "reserved"; };
    };
};
